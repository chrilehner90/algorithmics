{"version":3,"sources":["main.js"],"names":[],"mappings":";;AAAA,IAAI,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC;IAClB,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC;IAChB,UAAU,GAAG,OAAO,CAAC,uBAAuB,CAAC;IAC7C,KAAK,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;;AAElC,IAAI,eAAe,GAAG,2BAA2B;IAC7C,eAAe,GAAG,2BAA2B;IAC7C,eAAe,GAAG,2BAA2B;IAC7C,eAAe,GAAG,2BAA2B;IAC7C,eAAe,GAAG,2BAA2B,CAAC;;;AAIlD,IAAI,QAAQ,GAAG,CAAC,CAAC,SAAS,CAAC,EAAE,CAAC,QAAQ,CAAC;IACnC,SAAS,GAAG,CAAC,CAAC,SAAS,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC;;AAE1C,IAAI,sBAAsB,GAAG,QAAQ,CAAC,eAAe,CAAC;IAClD,sBAAsB,GAAG,QAAQ,CAAC,eAAe,CAAC;IAClD,sBAAsB,GAAG,QAAQ,CAAC,eAAe,CAAC;IAClD,sBAAsB,GAAG,QAAQ,CAAC,eAAe,CAAC;IAClD,sBAAsB,GAAG,QAAQ,CAAC,eAAe,CAAC,CAAC;;AAGvD,SAAS,UAAU,CAAC,OAAO,EAAE;AAC3B,MAAI,MAAM,GAAG,EAAE,CAAC;AAChB,OAAI,IAAI,CAAC,IAAI,aAAa,EAAE;AAC1B,UAAM,IAAI,MAAM,GAAG,IAAI,GAAG,MAAM,GAAG,IAAI,CAAC;GACzC;;AAED,MAAI,cAAc,GAAG,SAAS,CAAC,UAAU,EAAE,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;AAC/D,gBAAc,CAAC,IAAI,CAAC,YAAW;AAC7B,WAAO,CAAC,GAAG,CAAC,mCAAmC,CAAC,CAAC;GAClD,CAAC,CAAC;CAEJ;;AAGD,CAAC,CAAC,GAAG,CAAC,CACJ,sBAAsB,EACtB,sBAAsB,EACtB,sBAAsB,EACtB,sBAAsB,EACtB,sBAAsB,CACvB,CAAC,CACC,IAAI,CAAC,UAAS,IAAI,EAAE;AACnB,MAAI,UAAU,GAAG,IAAI,UAAU,EAAE,CAAC;AAClC,YAAU,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;CAGvC,CAAC,CAAC","file":"main-compiled.js","sourcesContent":["let fs = require('fs'),\n    Q = require('q'),\n    SuffixTree = require('./suffixTree-compiled'),\n    Utils = require('./utils.js');\n\nlet sherlockHolmes1 = 'Books/SherlockHolmes1.txt',\n    sherlockHolmes2 = 'Books/SherlockHolmes2.txt',\n    sherlockHolmes3 = 'Books/SherlockHolmes3.txt',\n    sherlockHolmes4 = 'Books/SherlockHolmes4.txt',\n    sherlockHolmes5 = 'Books/SherlockHolmes5.txt';\n\n\n// create a readFile function that returns a promise\nlet readFile = Q.denodeify(fs.readFile),\n    writeFile = Q.denodeify(fs.writeFile);\n\nlet sherlockHolmes1Promise = readFile(sherlockHolmes1),\n    sherlockHolmes2Promise = readFile(sherlockHolmes2),\n    sherlockHolmes3Promise = readFile(sherlockHolmes3),\n    sherlockHolmes4Promise = readFile(sherlockHolmes4),\n    sherlockHolmes5Promise = readFile(sherlockHolmes5);\n\n\nfunction exportFile(results) {\n  let output = \"\";\n  for(var i in prefixLenghts) {\n    output += \"test\" + \"\\t\" + \"test\" + \"\\n\";\n  }\n\n  let writingPromise = writeFile('data.dat', new Buffer(output));\n  writingPromise.done(function() {\n    console.log(\"Results written to data.dat file!\");\n  });\n\n}\n\n\nQ.all([\n  sherlockHolmes1Promise,\n  sherlockHolmes2Promise,\n  sherlockHolmes3Promise,\n  sherlockHolmes4Promise,\n  sherlockHolmes5Promise\n])\n  .done(function(data) {\n    var suffixTree = new SuffixTree();\n    suffixTree.buildSuffixTree(\"ababbaa\");\n\n\n  });"]}